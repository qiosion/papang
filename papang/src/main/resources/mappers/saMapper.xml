<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.company.papang.impl.SaMapper">

<!-- #################################################################1.활동################################################################# -->
<!-- (1).요리 --> 
<!-- CLOB 데이터 형식 String 변환 -->
<resultMap type="map" id="cookMemberPic">
	<result property="COOK_CONTENT" column="COOK_CONTENT" jdbcType="CLOB" javaType="java.lang.String"/>
</resultMap>

<!-- 요리 리스트 전체 조회 -->
<select id="getCookList" resultType="map" resultMap="cookMemberPic">
	SELECT A.COOK_NO, A.COOK_TITLE, B.MBR_ID, B.MBR_PIC, A.COOK_HIT, A.COOK_CATEGORY, A.COOK_CONTENT
	FROM COOK A, MEMBER B
	<where>
			 A.MBR_ID = B.MBR_ID
		<if test="cook_category != null and cook_category!=''">
			AND A.COOK_CATEGORY = #{cook_category}
		</if>
	</where>
</select>

<!-- 요리 글 등록 -->
<insert id="insertCook" parameterType="CookVO" >
	INSERT INTO COOK (COOK_TITLE,MBR_ID, COOK_CATEGORY,COOK_CONTENT) 
	VALUES (#{cook_title},#{mbr_id},#{cook_category},#{cook_content})
</insert>

<!-- 요리 단건 조회 -->
<select id="getCook" resultType="CookVO">
	SELECT COOK_NO, COOK_TITLE, COOK_CATEGORY,COOK_CONTENT ,MBR_ID
	FROM COOK 
	WHERE COOK_NO=#{cook_no}
</select>

<!-- 요리 후기 전체조회 -->
  <select id="getCActComm" resultType="Act_comVO" parameterType="act_comVO">
		SELECT ROWNUM,A.*
		FROM ACT_COM A
		WHERE A.AC_CATEGORY='요리' AND A.PC_NO=#{pc_no}
		<![CDATA[AND ROWNUM <= 5]]>
		ORDER BY A.AC_NO DESC
	</select>  
	
<!-- 요리 후기 등록 -->
<insert id="insertCookActComm" parameterType="act_comVO">
	INSERT INTO ACT_COM
	(MBR_ID,AC_NO,AC_CONTENT,AC_RATE,AC_CATEGORY,PC_NO,AC_PIC) VALUES 
	(#{mbr_id},SEQ_ACT_COM_AC_NO.NEXTVAL,#{ac_content},#{ac_rate},'요리',#{pc_no},#{ac_pic})
</insert>

<!-- (2).놀이  -->
  <!-- CLOB데이터 형식 String 변환 -->
<resultMap type="map" id="memberPicresult">
	<result property="PLAY_CONTENT" column="PLAY_CONTENT" jdbcType="CLOB" javaType="java.lang.String" />
</resultMap>

<!-- 놀이 전체조회, 놀이검색 --> 
<select id="getPlayList" resultType="map" resultMap="memberPicresult">
	SELECT A.PLAY_NO, A.PLAY_TITLE, A.PLAY_CATEGORY, A.PLAY_HIT, A.PLAY_CONTENT, B.MBR_ID, B.MBR_PIC 
	FROM PLAY A, MEMBER B
	<where>
	A.MBR_ID = B.MBR_ID
			<if test="play_category != null and play_category !=''">
				AND A.PLAY_CATEGORY = #{play_category}
			</if>
	</where>
</select>



<!-- 놀이 단건조회 -->
<select id="getPlay" resultType="PlayVO">
		SELECT PLAY_NO, PLAY_TITLE, PLAY_CATEGORY,PLAY_CONTENT,MBR_ID
		FROM PLAY
		WHERE PLAY_NO=#{play_no}
</select>


<!-- 조회수 증가 -->
	<update id="hitPlus" parameterType="PlayVO">
		UPDATE PLAY SET
		PLAY_HIT = PLAY_HIT + 1
		WHERE PLAY_NO = #{play_no}
	</update>
	
<!-- 놀이 글 등록 -->
	<insert id="insertPlay" parameterType="PlayVO">
		INSERT INTO PLAY (PLAY_NO,PLAY_TITLE,MBR_ID,PLAY_CATEGORY,PLAY_CONTENT) 
		VALUES (SEQ_PLAY_PLAY_NO.NEXTVAL,#{play_title},#{mbr_id},#{play_category},#{play_content})
	</insert>

<!-- 놀이 글 삭제 -->
	<delete id="deletePaly" parameterType="PlayVO">
		DELETE FROM PLAY 
		WHERE PLAY_NO=#{play_no}
	</delete>
	
<!-- 놀이 글 업데이트 -->
	<update id="updatePlay" parameterType="PlayVO">
		UPDATE PLAY 
		SET PLAY_TITLE=#{play_title}, PLAY_CONTENT=#{play_content} 
		WHERE PLAY_NO =#{play_no}
	</update>
	
<!-- 놀이 글 삭제시 해당 글 후기 삭제 -->
	<delete id="deletePlayAct" parameterType="Act_comVO">
	 DELETE
	 FROM ACT_COM
	 WHERE AC_CATEGORY='놀이' AND PC_NO=#{pc_no}
	 </delete>

<!--놀이 후기  전체 조회 -->
  	 <select id="getActComm" resultType="Act_comVO" parameterType="act_comVO">
		SELECT ROWNUM,A.*
		FROM ACT_COM A
		WHERE A.AC_CATEGORY='놀이' AND A.PC_NO=#{pc_no}
		<![CDATA[AND ROWNUM <= 5]]>
		ORDER BY A.AC_NO DESC
	</select>   

<!-- 후기 : 평점조회 -->
 <select id="getStar" resultType="Act_comVO" parameterType="act_comVO">
		SELECT ROUND(AVG(AC_RATE)) AS ROUNDRATE FROM ACT_COM WHERE AC_CATEGORY='놀이' AND PC_NO=#{pc_no}
	</select>   


<!-- 후기 : 후기등록 -->

<insert id="insertActComm" parameterType="act_comVO">
INSERT INTO ACT_COM
(MBR_ID,AC_NO,AC_CONTENT,AC_RATE,AC_CATEGORY,PC_NO,AC_PIC) VALUES 
(#{mbr_id},SEQ_ACT_COM_AC_NO.NEXTVAL,#{ac_content},#{ac_rate},'놀이',#{pc_no},#{ac_pic})

</insert>

<!-- #################################################################2.예방접종 #################################################################-->

<!--  사원등록    -->
	<insert id="insertPreven" parameterType="preventionVO">
	<!-- 	INSERT INTO EMPLOYEES (	employee_id, 
								first_name, 
								last_name,
								email,
								hire_date,
								job_id
								)
	 	                VALUES(
	 	               			#{employeeId},
	 	               			#{firstName},
	 	               			#{lastName},
	 	               			#{email},
	 	               			#{hireDate},
	 	               			#{jobId}) -->
	</insert>

	<select id="selectChild" resultType="ChildVO">
		SELECT *
		FROM CHILD
		<where>
			<if test="mbr_id != null and mbr_id !=''">
				mbr_id = #{mbr_id}
			</if>
		</where>
	</select>
	
	<select id="selectPrevent" resultType="PreventionVO">
		SELECT *
		FROM PREVENT
		<where>
			<if test="mbr_id != null and mbr_id !=''">
				mbr_id = #{mbr_id}
			</if>
		</where>
	</select>

</mapper>
