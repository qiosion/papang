<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.company.papang.impl.YrMapper">

<!-- 수정 전  조회-->
	<select id="getMemberVO" parameterType="memberVO" resultType="memberVO">
		SELECT  
		     
	    MBR_ID,
	    MBR_NAME,
	    MBR_PW,
	    TO_CHAR(MBR_BIRTH , 'yyyy-mm-dd') AS "mbr_birth",
	    MBR_PHONE,
	    MBR_POST,
	    MBR_ADDR1, 
	    MBR_ADDR2,
	    MBR_ADDR3,
	    MBR_BANK,
	    MBR_ACCOUNT,
	    MBR_AUTHOR,
	    MBR_DATE,
	    MBR_STATUS,
	    MBR_GENDER,
	    MBR_EMAIL,
	    MBR_PIC
	    
	    FROM MEMBER
	     
		WHERE MBR_ID = #{mbr_id}
	</select>
	 
<!-- 회원정보수정 -->
<select id="updateMemberVO" parameterType="memberVO" resultType="memberVO">
		UPDATE
		
		MEMBER
		 
		SET 
		 
	    MBR_PHONE= #{mbr_phone},
	    MBR_EMAIL= #{mbr_email}, 
	    MBR_BANK= #{mbr_bank},
	    MBR_POST=#{mbr_post}, 
	    MBR_ADDR1= #{mbr_addr1},	  
	    MBR_ADDR2= #{mbr_addr2},	
	    MBR_ADDR3= #{mbr_addr3},
	    <if test = "mbr_pic !=null">	
	    MBR_PIC= #{mbr_pic}, 
	    </if>
	    MBR_ACCOUNT= #{mbr_account},
	    MBR_PW=#{mbr_pw}
	    
	    
		WHERE MBR_ID = #{mbr_id}
		
	</select>
	
	<!-- 회원탈퇴 -->
<select id="notjoinMemberVO" parameterType="memberVO" resultType="memberVO">
		UPDATE
		
		MEMBER
		
		SET
		
	    MBR_STATUS= #{mbr_status}
	    
	    
		WHERE MBR_ID = #{mbr_id}
	</select>
		<!-- 아기정보조회 -->
<select id="babyinfoChildVO" parameterType="childVO" resultType="childVO">
		SELECT CHI_NO,MBR_ID,
		TO_CHAR(chi_birth , 'yyyy-mm-dd') AS "chi_birth",
		CHI_NAME,CHI_GENDER,CHI_SNS,CHI_PIC 
		FROM CHILD  
		 WHERE MBR_ID = #{mbr_id}
</select>
		<!-- 아기정보삭제 -->
<select id="babyinfodeleteChildVO" parameterType="childVO" resultType="childVO">
		DELETE 
		FROM CHILD
		WHERE CHI_NO = #{chi_no} 
</select>
		<!-- 아기정보등록 -->
<select id="babyinfoinsertChildVO" parameterType="childVO" resultType="childVO">
		INSERT 
		INTO child 
		(mbr_id,chi_birth,chi_name,chi_gender,chi_sns,chi_pic)
		VALUES(#{mbr_id},#{chi_birth},#{chi_name},#{chi_gender},#{chi_sns},#{chi_pic})
</select>
		<!-- 구매내역1 -->
<select id="market_buyinfoOrder_infoVO" parameterType="order_infoVO" resultType="order_infoVO">
		SELECT 
		ORDER_NO,WAYBILL,ORDER_DATE,ORDER_STATUS,ORDER_SUM 
		FROM ORDER_INFO 
		WHERE MBR_ID = #{mbr_id}
</select>  
		<!-- 구매내역2 -->
<select id="market_buyinfoOrder_info2VO" parameterType="pro_odVO" resultType="pro_odVO">
		SELECT PRODUCT.PRO_NO,PRODUCT.PRO_PIC,PRODUCT.PRO_NAME,PRODUCT.PRO_PRICE,ORDER_DETAIL.BAG_CNT
		FROM PRODUCT JOIN ORDER_DETAIL ON PRODUCT.PRO_NO = ORDER_DETAIL.PRO_NO
		WHERE  ORDER_DETAIL.ORDER_NO = #{order_no}
</select>
 		<!-- 배송지정보 -->
<select id="arrinfo" parameterType="order_infoVO" resultType="order_infoVO">
		SELECT 
		POST,ADDR1,ADDR3 
		FROM ORDER_INFO  
		WHERE ORDER_NO = #{order_no}
</select>


 <!-- waybill 단건조회 -->
<select id="selectwaybill" parameterType="order_infoVO" resultType="order_infoVO">
		 SELECT
		  WAYBILL 
		  FROM ORDER_INFO 
		  WHERE ORDER_NO=#{order_no}
</select>  
<!-- 내 게시물 질문 -->	
	<select id="myboard_questionCommunityVO" parameterType="communityVO" resultType="communityVO">
		SELECT COM_NO,MBR_ID,COM_CATEGORY,COM_TITLE,COM_DATE,COM_HIT,COM_CONTENT
		  FROM COMMUNITY
		  WHERE MBR_ID = #{mbr_id}
	</select>
<!-- 게시물 답변  -->	
	<select id="myboard_answerCommunity_comVO" parameterType="community_comVO" resultType="community_comVO">
		SELECT CC_NO,MBR_ID,CC_CONTENT,COM_NO,CC_DATE,CC_CATEGORY 
		FROM COMMUNITY_COM 
		WHERE MBR_ID=#{mbr_id}
		</select>
<!-- 신고현황보기  -->	
	<select id="myboard_policeReportVO" parameterType="reportVO" resultType="reportVO">
		SELECT repo_no,mbr_id,repo_category,repo_category_no,repo_title,repo_content,repo_status,repo_ans
		FROM  REPORT 
		WHERE MBR_ID=#{mbr_id}
		</select>		
		
<!-- 시터정보조회-->
	<select id="sitter_infoSitterVO" parameterType="sitterVO" resultType="sitterVO">
		select SIT_MBR_ID,SIT_PAYDAY,SIT_OFF,SIT_LOC,SIT_PAY,SIT_AGE,SIT_NOTE,SIT_PIC 
		FROM SITTER 
		WHERE SIT_MBR_ID=#{sit_mbr_id}
	</select>
	
	<!-- 시터권한 체크-->
<select id="getcount" parameterType="sitterVO" resultType="int">
		SELECT 
		COUNT(*) 
		FROM SITTER  
		WHERE SIT_MBR_ID = #{sit_mbr_id} 
</select>	
<!-- 시터정보조회 후 수정 -->
<select id="updateSitterVO" parameterType="sitterVO" resultType="sitterVO">
		UPDATE
		
		SITTER
		
		SET
		
		
		
	  
	    SIT_NOTE=#{sit_note},
	    SIT_PAY=#{sit_pay},
	    SIT_LOC=#{sit_loc},
	    SIT_AGE=#{sit_age},
	    SIT_OFF=#{sit_off},
	    <if test = "sit_pic !=null">
	    SIT_PIC=#{sit_pic}
	    </if>
	   
	
	    
	     
	   
	    
	    
		WHERE SIT_MBR_ID = #{sit_mbr_id}
	</select>	
	
	<!-- 예약정보 -->
<select id="getSitter_revVO" parameterType="sitter_revVO" resultType="map">
		SELECT 
		SRV_NO "srv_no",
		MBR_ID "mbr_id", 
		CHI_NO "chi_no", 
		TO_CHAR(MIN(SRV_DATE),'yyyy-mm-dd') AS "startday",  
		TO_CHAR(MAX(SRV_DATE),'yyyy-mm-dd') AS "finishday",
		SRV_STATUS "srv_status"
		FROM SITTER_REV  
		WHERE SIT_MBR_ID = #{sit_mbr_id}
		GROUP BY SRV_NO,MBR_ID,CHI_NO,SRV_STATUS
</select>		
	
	<!-- 예약정보 상세히-->
<select id="getSitter_revVO2" parameterType="sitChiVO" resultType="sitChiVO">
		SELECT
		SITTER_REV.SRV_NO,SITTER_REV.MBR_ID,CHILD.CHI_NAME,CHILD.CHI_GENDER,
		TO_CHAR(SITTER_REV.SRV_DATE,'yyyy-mm-dd') AS "workingday",
		SITTER_REV.SRV_PAY 
		FROM SITTER_REV JOIN CHILD ON SITTER_REV.CHI_NO = CHILD.CHI_NO
        WHERE SITTER_REV.SRV_NO=#{srv_no}
</select>

	<!-- 예약정보 모달창 합계-->
<select id="getSitter_revVO3" parameterType="sitter_revVO" resultType="sitter_revVO">
		SELECT SUM(SRV_PAY) AS "sum"
		 FROM SITTER_REV 
		 WHERE SIT_MBR_ID = #{sit_mbr_id} AND SRV_NO=#{srv_no}
</select>

	<!-- 예약정보  합계 월급-->
<select id="getSitter_revVO4" parameterType="sitter_revVO" resultType="sitter_revVO">
		SELECT 
		SRV_NO, 
		SRV_DATE,
		SRV_PAY, 
		SRV_STATUS 
		FROM SITTER_REV 
		WHERE SIT_MBR_ID=#{sit_mbr_id}
		AND SRV_STATUS=#{srv_status}  
		AND TO_CHAR(SRV_DATE,'YYYY-MM')=#{srv_date} 
</select>
  
	<!-- 예약정보  합계 월급-->
<select id="getSitter_revVO5" parameterType="sitter_revVO" resultType="sitter_revVO">
SELECT SUM(SRV_PAY) AS "sum" 
FROM SITTER_REV
WHERE SIT_MBR_ID=#{sit_mbr_id} AND 
SRV_STATUS=#{srv_status} AND 
 TO_CHAR(SRV_DATE,'YYYY-MM')=#{srv_date} 
GROUP BY TO_CHAR(SRV_DATE,'YYYY-MM'),SRV_STATUS 
</select>		

   <!-- 주문후 상품재고 변경 -->
   <update id="updateProCnt" parameterType="BagVO">
      UPDATE PRODUCT
      SET pro_cnt = pro_cnt+#{bag_cnt} 
      WHERE pro_no = #{pro_no}
   </update>

 <!-- 주문후 상품재고 변경, 삭제 -->
   <update id="orderdelete" parameterType="order_infoVO">
      DELETE  
      FROM 
      ORDER_INFO 
      WHERE ORDER_NO = #{order_no}
   </update>


	<!-- play 리스트-->
<select id="selectplay" parameterType="playVO" resultType="playVO">
	
	SELECT 
	PLAY_NO,PLAY_TITLE,MBR_ID,PLAY_CATEGORY,PLAY_HIT 
	FROM PLAY
	WHERE MBR_ID=#{mbr_id}
</select>

	<!-- cook 리스트-->
<select id="selectcook" parameterType="cookVO" resultType="cookVO">
	 
	SELECT 
	 COOK_NO,COOK_TITLE,MBR_ID,COOK_CATEGORY,COOK_HIT 
	 FROM COOK 
	 WHERE MBR_ID=#{mbr_id}
</select>	

	<!-- 활동 후기-->
<select id="selectact_com" parameterType="act_comVO" resultType="act_comVO">
	 
	SELECT 
	AC_NO,AC_PIC,AC_CONTENT,AC_RATE,AC_CATEGORY 
	FROM ACT_COM 
	WHERE MBR_ID=#{mbr_id}
</select>	



<!-- 전체조회  -->	
	<select id="getEmpList" resultType="emp">
		SELECT rownum id, e.* 
		  FROM employees e
		<where>  
		  <if test="departmentId != null">
		       department_id = #{departmentId}
		  </if>  
	      <if test="employeeId != null">
            and employee_id = #{employeeId}
          </if>  
          <if test="salary != null">
            <![CDATA[ and salary < #{salary} ]]>
          </if>    
          <if test="firstName != null">
            and upper(first_name) like '%' || upper(#{firstName}) || '%'
          </if> 
          <if test="employeeIds != null">
            and employee_id in  
                <foreach collection="employeeIds" item="id" 
                         open="(" close=")" separator=",">
                    #{id}
                </foreach>
          </if>      
        </where>	
		 ORDER BY first_name 
	</select>

<!--  사원등록    -->
	<insert id="insertEmp" parameterType="emp">
		INSERT INTO EMPLOYEES (	employee_id, 
								first_name, 
								last_name,
								email,
								hire_date,
								job_id
								)
	 	                VALUES(
	 	               			#{employeeId},
	 	               			#{firstName},
	 	               			#{lastName},
	 	               			#{email},
	 	               			#{hireDate},
	 	               			#{jobId})
	</insert>
	

</mapper>
